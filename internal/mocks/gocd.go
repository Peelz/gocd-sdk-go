// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/nikhil.bhat/my-opensource/gocd-sdk-go/gocd.go

// Package mockGocd is a generated GoMock package.
package mockGocd

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gocd "github.com/nikhilsbhat/gocd-sdk-go"
)

// MockGoCd is a mock of GoCd interface.
type MockGoCd struct {
	ctrl     *gomock.Controller
	recorder *MockGoCdMockRecorder
}

// MockGoCdMockRecorder is the mock recorder for MockGoCd.
type MockGoCdMockRecorder struct {
	mock *MockGoCd
}

// NewMockGoCd creates a new mock instance.
func NewMockGoCd(ctrl *gomock.Controller) *MockGoCd {
	mock := &MockGoCd{ctrl: ctrl}
	mock.recorder = &MockGoCdMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGoCd) EXPECT() *MockGoCdMockRecorder {
	return m.recorder
}

// GetAdminsInfo mocks base method.
func (m *MockGoCd) GetAdminsInfo() (gocd.SystemAdmins, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdminsInfo")
	ret0, _ := ret[0].(gocd.SystemAdmins)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdminsInfo indicates an expected call of GetAdminsInfo.
func (mr *MockGoCdMockRecorder) GetAdminsInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdminsInfo", reflect.TypeOf((*MockGoCd)(nil).GetAdminsInfo))
}

// GetAgentJobRunHistory mocks base method.
func (m *MockGoCd) GetAgentJobRunHistory(agents []string) ([]gocd.AgentJobHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgentJobRunHistory", agents)
	ret0, _ := ret[0].([]gocd.AgentJobHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentJobRunHistory indicates an expected call of GetAgentJobRunHistory.
func (mr *MockGoCdMockRecorder) GetAgentJobRunHistory(agents interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentJobRunHistory", reflect.TypeOf((*MockGoCd)(nil).GetAgentJobRunHistory), agents)
}

// GetAgentsInfo mocks base method.
func (m *MockGoCd) GetAgentsInfo() ([]gocd.Agent, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgentsInfo")
	ret0, _ := ret[0].([]gocd.Agent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentsInfo indicates an expected call of GetAgentsInfo.
func (mr *MockGoCdMockRecorder) GetAgentsInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentsInfo", reflect.TypeOf((*MockGoCd)(nil).GetAgentsInfo))
}

// GetBackupInfo mocks base method.
func (m *MockGoCd) GetBackupInfo() (gocd.BackupConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBackupInfo")
	ret0, _ := ret[0].(gocd.BackupConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBackupInfo indicates an expected call of GetBackupInfo.
func (mr *MockGoCdMockRecorder) GetBackupInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBackupInfo", reflect.TypeOf((*MockGoCd)(nil).GetBackupInfo))
}

// GetConfigRepoInfo mocks base method.
func (m *MockGoCd) GetConfigRepoInfo() ([]gocd.ConfigRepo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigRepoInfo")
	ret0, _ := ret[0].([]gocd.ConfigRepo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfigRepoInfo indicates an expected call of GetConfigRepoInfo.
func (mr *MockGoCdMockRecorder) GetConfigRepoInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigRepoInfo", reflect.TypeOf((*MockGoCd)(nil).GetConfigRepoInfo))
}

// GetEnvironmentInfo mocks base method.
func (m *MockGoCd) GetEnvironmentInfo() ([]gocd.Environment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnvironmentInfo")
	ret0, _ := ret[0].([]gocd.Environment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEnvironmentInfo indicates an expected call of GetEnvironmentInfo.
func (mr *MockGoCdMockRecorder) GetEnvironmentInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnvironmentInfo", reflect.TypeOf((*MockGoCd)(nil).GetEnvironmentInfo))
}

// GetHealthInfo mocks base method.
func (m *MockGoCd) GetHealthInfo() ([]gocd.ServerHealth, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHealthInfo")
	ret0, _ := ret[0].([]gocd.ServerHealth)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHealthInfo indicates an expected call of GetHealthInfo.
func (mr *MockGoCdMockRecorder) GetHealthInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHealthInfo", reflect.TypeOf((*MockGoCd)(nil).GetHealthInfo))
}

// GetPipelineGroupInfo mocks base method.
func (m *MockGoCd) GetPipelineGroupInfo() ([]gocd.PipelineGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPipelineGroupInfo")
	ret0, _ := ret[0].([]gocd.PipelineGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPipelineGroupInfo indicates an expected call of GetPipelineGroupInfo.
func (mr *MockGoCdMockRecorder) GetPipelineGroupInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPipelineGroupInfo", reflect.TypeOf((*MockGoCd)(nil).GetPipelineGroupInfo))
}

// GetPipelineState mocks base method.
func (m *MockGoCd) GetPipelineState(pipelines []string) ([]gocd.PipelineState, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPipelineState", pipelines)
	ret0, _ := ret[0].([]gocd.PipelineState)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPipelineState indicates an expected call of GetPipelineState.
func (mr *MockGoCdMockRecorder) GetPipelineState(pipelines interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPipelineState", reflect.TypeOf((*MockGoCd)(nil).GetPipelineState), pipelines)
}

// GetPipelines mocks base method.
func (m *MockGoCd) GetPipelines() (gocd.PipelinesInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPipelines")
	ret0, _ := ret[0].(gocd.PipelinesInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPipelines indicates an expected call of GetPipelines.
func (mr *MockGoCdMockRecorder) GetPipelines() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPipelines", reflect.TypeOf((*MockGoCd)(nil).GetPipelines))
}

// GetVersionInfo mocks base method.
func (m *MockGoCd) GetVersionInfo() (gocd.VersionInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVersionInfo")
	ret0, _ := ret[0].(gocd.VersionInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVersionInfo indicates an expected call of GetVersionInfo.
func (mr *MockGoCdMockRecorder) GetVersionInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVersionInfo", reflect.TypeOf((*MockGoCd)(nil).GetVersionInfo))
}
